pf0Fposofldsoprocstmrlxmnemonicop1op2op3op4iextgrp1grp2grp3tested fmodif fdef fundef ff valuesdescription, notes
0F00002+PSLDTMwLDTRsystemStore Local Descriptor Table Register
0F00102+PSTRMwTRsystemStore Task Register
0F00202+P0LLDTLDTREwsystemLoad Local Descriptor Table Register
0F00302+P0LTRTREwsystemLoad Task Register
0F00402+PVERREwsystem....z.......z...Verify a Segment for Reading
0F00502+PVERWEwsystem....z.......z...Verify a Segment for Writing
0F006IT+JMPEsystembranchJump to IA-64 Instruction Set
0F01002+SGDTMsGDTRsystemStore Global Descriptor Table Register
0F01C10P4++D43P0VMCALLvmxo..szapco..szapcCall to VM Monitor
0F01C20P4++D43P0VMLAUNCHvmxo..szapco..szapcLaunch Virtual Machine
0F01C30P4++D43P0VMRESUMEvmxo..szapco..szapcResume Virtual Machine
0F01C40P4++D43P0VMXOFFvmxo..szapco..szapcLeave VMX Operation
0F01102+SIDTMsIDTRsystemStore Interrupt Descriptor Table Register
0F01C81P4++0MONITORBAbECXEDXsse3syncSet Up Monitor Address
0F01C91P4++0MWAITEAXECXsse3syncMonitor Wait
0F01202+0LGDTGDTRMssystemLoad Global Descriptor Table Register
0F01D02C2++XGETBVEDXEAXECXXCRsystemGet Value of Extended Control Register
0F01D12C2++0XSETBVXCRECXEDXEAXsystemSet Extended Control Register
0F01302+0LIDTIDTRMssystemLoad Interrupt Descriptor Table Register
0F01402+D22SMSWMwMSWsystemStore Machine Status Word
0F01602+0LMSWMSWEwsystemLoad Machine Status Word
0F01704+0INVLPGMsystemInvalidate TLB Entry
0F01F87P4+E0SWAPGSGSI...systemSwap GS Base Register
0F01F97C7+f2RDTSCPEAXEDXECX...systemRead Time-Stamp Counter and Processor ID
0F02r02+PLARGvqpMwsystem....z.......z...Load Access Rights Byte
0F03r02+PLSLGvqpMwsystem....z.......z...Load Segment Limit
0F0502U23PLOADALLAXCXDX...systembranchLoad All of the CPU Registers
0F05P4+D24ESYSCALLRCXR11SS...systembranchFast System Call
0F0602+0CLTSCR0systemClear Task-Switched Flag in CR0
0F0703U23PLOADALLEAXECXEDX...systembranchLoad All of the CPU Registers
0F07P4+E0SYSRETSSFdR11...systembranchtransReturn From Fast System Call
0F0804+0INVDsystemInvalidate Internal Caches
0F0904+0WBINVDsystemWrite Back and Invalidate Cache
0F0B02+UD2gencontrolUndefined Instruction
0F0DPP+M25NOPEvgencontrolNo Operation
0F10rP3+MOVUPSVpsWpssse1simdfpdatamovMove Unaligned Packed Single-FP Values
F30F10rP3+MOVSSVssWsssse1simdfpdatamovMove Scalar Single-FP Values
660F10rP4+MOVUPDVpdWpdsse2pcksclrdatamovMove Unaligned Packed Double-FP Value
F20F10rP4+MOVSDVsdWsdsse2pcksclrdatamovMove Scalar Double-FP Value
0F11rP3+MOVUPSWpsVpssse1simdfpdatamovMove Unaligned Packed Single-FP Values
F30F11rP3+MOVSSWssVsssse1simdfpdatamovMove Scalar Single-FP Values
660F11rP4+MOVUPDWpdVpdsse2pcksclrdatamovMove Unaligned Packed Double-FP Values
F20F11rP4+MOVSDWsdVsdsse2pcksclrdatamovMove Scalar Double-FP Value
0F12rP3+MOVHLPSVqUqsse1simdfpdatamovMove Packed Single-FP Values High to Low
0F12rP3+MOVLPSVqMqsse1simdfpdatamovMove Low Packed Single-FP Values
660F12rP4+MOVLPDVqMqsse2pcksclrdatamovMove Low Packed Double-FP Value
F20F12rP4++MOVDDUPVqWqsse3simdfpdatamovMove One Double-FP and Duplicate
F30F12rP4++MOVSLDUPVqWqsse3simdfpdatamovMove Packed Single-FP Low and Duplicate
0F13rP3+MOVLPSMqVqsse1simdfpdatamovMove Low Packed Single-FP Values
660F13rP4+MOVLPDMqVqsse2pcksclrdatamovMove Low Packed Double-FP Value
0F14rP3+UNPCKLPSVpsWqsse1simdfpshunpckUnpack and Interleave Low Packed Single-FP Values
660F14rP4+UNPCKLPDVpdWpdsse2pcksclrshunpckUnpack and Interleave Low Packed Double-FP Values
0F15rP3+UNPCKHPSVpsWqsse1simdfpshunpckUnpack and Interleave High Packed Single-FP Values
660F15rP4+UNPCKHPDVpdWpdsse2pcksclrshunpckUnpack and Interleave High Packed Double-FP Values
0F16rP3+MOVLHPSVqUqsse1simdfpdatamovMove Packed Single-FP Values Low to High
0F16rP3+MOVHPSVqMqsse1simdfpdatamovMove High Packed Single-FP Values
660F16rP4+MOVHPDVqMqsse2pcksclrdatamovMove High Packed Double-FP Value
F30F16rP4++MOVSHDUPVqWqsse3simdfpdatamovMove Packed Single-FP High and Duplicate
0F17rP3+MOVHPSMqVqsse1simdfpdatamovMove High Packed Single-FP Values
660F17rP4+MOVHPDMqVqsse2pcksclrdatamovMove High Packed Double-FP Value
0F18PP-P2M26HINT_NOPEvgencontrolHintable NOP
0F180P3+PREFETCHNTAMbsse1fetchPrefetch Data Into Caches
0F181P3+PREFETCHT0Mbsse1fetchPrefetch Data Into Caches
0F182P3+PREFETCHT1Mbsse1fetchPrefetch Data Into Caches
0F183P3+PREFETCHT2Mbsse1fetchPrefetch Data Into Caches
0F184PP+M26HINT_NOPEvgencontrolHintable NOP
0F185PP+M26HINT_NOPEvgencontrolHintable NOP
0F186PP+M26HINT_NOPEvgencontrolHintable NOP
0F187PP+M26HINT_NOPEvgencontrolHintable NOP
0F19PP+M26HINT_NOPEvgencontrolHintable NOP
0F1APP+M26HINT_NOPEvgencontrolHintable NOP
0F1BPP+M26HINT_NOPEvgencontrolHintable NOP
0F1CPP+M26HINT_NOPEvgencontrolHintable NOP
0F1DPP+M26HINT_NOPEvgencontrolHintable NOP
0F1EPP+M26HINT_NOPEvgencontrolHintable NOP
0F1FPP-P2M26HINT_NOPEvgencontrolHintable NOP
0F1F0P4++NOPEvgencontrolNo Operation
0F1F1PP+M26HINT_NOPEvgencontrolHintable NOP
0F1F2PP+M26HINT_NOPEvgencontrolHintable NOP
0F1F3PP+M26HINT_NOPEvgencontrolHintable NOP
0F1F4PP+M26HINT_NOPEvgencontrolHintable NOP
0F1F5PP+M26HINT_NOPEvgencontrolHintable NOP
0F1F6PP+M26HINT_NOPEvgencontrolHintable NOP
0F1F7PP+M26HINT_NOPEvgencontrolHintable NOP
0F20r03+D270MOVRdCdsystemo..szapco..szapcMove to/from Control Registers
0F20r03+U280MOVHdCdsystemo..szapco..szapcMove to/from Control Registers
0F20rP4+E0MOVRqCqsystemo..szapco..szapcMove to/from Control Registers
0F20rP4+U28E0MOVHqCqsystemo..szapco..szapcMove to/from Control Registers
0F21r03+0MOVRdDdsystemo..szapco..szapcMove to/from Debug Registers
0F21r03+U280MOVHdDdsystemo..szapco..szapcMove to/from Debug Registers
0F21r03+E0MOVRqDqsystemo..szapco..szapcMove to/from Debug Registers
0F21r03+U28E0MOVHqDqsystemo..szapco..szapcMove to/from Debug Registers
0F22r03+D270MOVCdRdsystemo..szapco..szapcMove to/from Control Registers
0F22r03+U280MOVCdHdsystemo..szapco..szapcMove to/from Control Registers
0F22rP4+E0MOVCqRqsystemo..szapco..szapcMove to/from Control Registers
0F22rP4+U28E0MOVCqHqsystemo..szapco..szapcMove to/from Control Registers
0F23r03+0MOVDdRdsystemo..szapco..szapcMove to/from Debug Registers
0F23r03+U280MOVDqHqsystemo..szapco..szapcMove to/from Debug Registers
0F23r03+E0MOVDqRqsystemo..szapco..szapcMove to/from Debug Registers
0F23r03+U28E0MOVDqHqsystemo..szapco..szapcMove to/from Debug Registers
0F24r03-040MOVRdTdsystemo..szapco..szapcMove to/from Test Registers
0F24r03-04U280MOVHdTdsystemo..szapco..szapcMove to/from Test Registers
0F26r03-040MOVTdRdsystemo..szapco..szapcMove to/from Test Registers
0F26r03-04U280MOVTdHdsystemo..szapco..szapcMove to/from Test Registers
0F28rP3+MOVAPSVpsWpssse1simdfpdatamovMove Aligned Packed Single-FP Values
660F28rP4+MOVAPDVpdWpdsse2pcksclrdatamovMove Aligned Packed Double-FP Values
0F29rP3+MOVAPSWpsVpssse1simdfpdatamovMove Aligned Packed Single-FP Values
660F29rP4+MOVAPDWpdVpdsse2pcksclrdatamovMove Aligned Packed Double-FP Values
0F2ArP3+CVTPI2PSVpsQpisse1converConvert Packed DW Integers to Single-FP Values
F30F2ArP3+CVTSI2SSVssEdqpsse1converConvert DW Integer to Scalar Single-FP Value
660F2ArP4+CVTPI2PDVpdQpisse2pcksclrconverConvert Packed DW Integers to Double-FP Values
F20F2ArP4+CVTSI2SDVsdEdqpsse2pcksclrconverConvert DW Integer to Scalar Double-FP Value
0F2BrP3+MOVNTPSMpsVpssse1cachectStore Packed Single-FP Values Using Non-Temporal Hint
660F2BrP4+MOVNTPDMpdVpdsse2cachectStore Packed Double-FP Values Using Non-Temporal Hint
0F2CrP3+CVTTPS2PIPpiWpsqsse1converConvert with Trunc. Packed Single-FP Values to DW Integers
F30F2CrP3+CVTTSS2SIGdqpWsssse1converConvert with Trunc. Scalar Single-FP Value to DW Integer
660F2CrP4+CVTTPD2PIPpiWpdsse2pcksclrconverConvert with Trunc. Packed Double-FP Values to DW Integers
F20F2CrP4+CVTTSD2SIGdqpWsdsse2pcksclrconverConv. with Trunc. Scalar Double-FP Value to Signed DW Int
0F2DrP3+CVTPS2PIPpiWpsqsse1converConvert Packed Single-FP Values to DW Integers
F30F2DrP3+CVTSS2SIGdqpWsssse1converConvert Scalar Single-FP Value to DW Integer
660F2DrP4+CVTPD2PIPpiWpdsse2pcksclrconverConvert Packed Double-FP Values to DW Integers
F20F2DrP4+CVTSD2SIGdqpWsdsse2pcksclrconverConvert Scalar Double-FP Value to DW Integer
0F2ErP3+UCOMISSVssWsssse1simdfpcompar....z.pc....z.pcUnordered Compare Scalar Single-FP Values and Set EFLAGS
660F2ErP4+UCOMISDVsdWsdsse2pcksclrcompar....z.pc....z.pcUnordered Compare Scalar Double-FP Values and Set EFLAGS
0F2FrP3+COMISSVssWsssse1simdfpcompar....z.pc....z.pcCompare Scalar Ordered Single-FP Values and Set EFLAGS
660F2FrP4+COMISDVsdWsdsse2pcksclrcompar....z.pc....z.pcCompare Scalar Ordered Double-FP Values and Set EFLAGS
0F30P1+0WRMSRMSRrCXrAXrDXsystemWrite to Model Specific Register
0F31P1+f2RDTSCEAXEDXI...systemRead Time-Stamp Counter
0F32P1+0RDMSRrAXrDXrCXMSRsystemRead from Model Specific Register
0F33PX+f3RDPMCEAXEDXPMCsystemRead Performance-Monitoring Counters
0F34SrP2+PSYSENTERSSESPI......systembranch..i.......i.......i.....Fast System Call
0F34SrP4+D29ESYSENTERSSRSPI......systembranch..i.......i.......i.....Fast System Call
0F35SrP2+D30P0SYSEXITSSeSPI......systembranchtransFast Return from Fast System Call
0F37C2++D31GETSECEAXsmxGETSEC Leaf Functions
0F3800rC2+PSHUFBPqQqssse3simdintPacked Shuffle Bytes
660F3800rC2+PSHUFBVdqWdqssse3simdintPacked Shuffle Bytes
0F3801rC2+PHADDWPqQqssse3simdintPacked Horizontal Add
660F3801rC2+PHADDWVdqWdqssse3simdintPacked Horizontal Add
0F3802rC2+PHADDDPqQqssse3simdintPacked Horizontal Add
660F3802rC2+PHADDDVdqWdqssse3simdintPacked Horizontal Add
0F3803rC2+PHADDSWPqQqssse3simdintPacked Horizontal Add and Saturate
660F3803rC2+PHADDSWVdqWdqssse3simdintPacked Horizontal Add and Saturate
0F3804rC2+PMADDUBSWPqQqssse3simdintMultiply and Add Packed Signed and Unsigned Bytes
660F3804rC2+PMADDUBSWVdqWdqssse3simdintMultiply and Add Packed Signed and Unsigned Bytes
0F3805rC2+PHSUBWPqQqssse3simdintPacked Horizontal Subtract
660F3805rC2+PHSUBWVdqWdqssse3simdintPacked Horizontal Subtract
0F3806rC2+PHSUBDPqQqssse3simdintPacked Horizontal Subtract
660F3806rC2+PHSUBDVdqWdqssse3simdintPacked Horizontal Subtract
0F3807rC2+PHSUBSWPqQqssse3simdintPacked Horizontal Subtract and Saturate
660F3807rC2+PHSUBSWVdqWdqssse3simdintPacked Horizontal Subtract and Saturate
0F3808rC2+PSIGNBPqQqssse3simdintPacked SIGN
660F3808rC2+PSIGNBVdqWdqssse3simdintPacked SIGN
0F3809rC2+PSIGNWPqQqssse3simdintPacked SIGN
660F3809rC2+PSIGNWVdqWdqssse3simdintPacked SIGN
0F380ArC2+PSIGNDPqQqssse3simdintPacked SIGN
660F380ArC2+PSIGNDVdqWdqssse3simdintPacked SIGN
0F380BrC2+PMULHRSWPqQqssse3simdintPacked Multiply High with Round and Scale
660F380BrC2+PMULHRSWVdqWdqssse3simdintPacked Multiply High with Round and Scale
660F3810rC2++D44PBLENDVBVdqWdqXMM0sse41simdintdatamovVariable Blend Packed Bytes
660F3814rC2++D44BLENDVPSVpsWpsXMM0sse41simdintdatamovVariable Blend Packed Single-FP Values
660F3815rC2++D44BLENDVPDVpdWpdXMM0sse41simdintdatamovVariable Blend Packed Double-FP Values
660F3817rC2++D44PTESTVdqWdqsse41o..szapco..szapco..s.ap.Logical Compare
0F381CrC2+PABSBPqQqssse3simdintPacked Absolute Value
660F381CrC2+PABSBVdqWdqssse3simdintPacked Absolute Value
0F381DrC2+PABSWPqQqssse3simdintPacked Absolute Value
660F381DrC2+PABSWVdqWdqssse3simdintPacked Absolute Value
0F381ErC2+PABSDPqQqssse3simdintPacked Absolute Value
660F381ErC2+PABSDVdqWdqssse3simdintPacked Absolute Value
660F3820rC2++D44PMOVSXBWVdqMqsse41simdintconverPacked Move with Sign Extend
660F3821rC2++D44PMOVSXBDVdqMdsse41simdintconverPacked Move with Sign Extend
660F3822rC2++D44PMOVSXBQVdqMwsse41simdintconverPacked Move with Sign Extend
660F3823rC2++D44PMOVSXWDVdqMqsse41simdintconverPacked Move with Sign Extend
660F3824rC2++D44PMOVSXWQVdqMdsse41simdintconverPacked Move with Sign Extend
660F3825rC2++D44PMOVSXDQVdqMqsse41simdintconverPacked Move with Sign Extend
660F3828rC2++D44PMULDQVdqWdqsse41simdintarithMultiply Packed Signed Dword Integers
660F3829rC2++D44PCMPEQQVdqWdqsse41simdintcomparCompare Packed Qword Data for Equal
660F382ArC2++D44MOVNTDQAVdqMdqsse41cachectLoad Double Quadword Non-Temporal Aligned Hint
660F382BrC2++D44PACKUSDWVdqWdqsse41simdintconverPack with Unsigned Saturation
660F3830rC2++D44PMOVZXBWVdqMqsse41simdintconverPacked Move with Zero Extend
660F3831rC2++D44PMOVZXBDVdqMdsse41simdintconverPacked Move with Zero Extend
660F3832rC2++D44PMOVZXBQVdqMwsse41simdintconverPacked Move with Zero Extend
660F3833rC2++D44PMOVZXWDVdqMqsse41simdintconverPacked Move with Zero Extend
660F3834rC2++D44PMOVZXWQVdqMdsse41simdintconverPacked Move with Zero Extend
660F3835rC2++D44PMOVZXDQVdqMqsse41simdintconverPacked Move with Zero Extend
660F3837rC2++D44PCMPGTQVdqWdqsse42simdintcomparCompare Packed Qword Data for Greater Than
660F3838rC2++D44PMINSBVdqWdqsse41simdintcomparMinimum of Packed Signed Byte Integers
660F3839rC2++D44PMINSDVdqWdqsse41simdintcomparMinimum of Packed Signed Dword Integers
660F383ArC2++D44PMINUWVdqWdqsse41simdintcomparMinimum of Packed Unsigned Word Integers
660F383BrC2++D44PMINUDVdqWdqsse41simdintcomparMinimum of Packed Unsigned Dword Integers
660F383CrC2++D44PMAXSBVdqWdqsse41simdintcomparMaximum of Packed Signed Byte Integers
660F383DrC2++D44PMAXSDVdqWdqsse41simdintcomparMaximum of Packed Signed Dword Integers
660F383ErC2++D44PMAXUWVdqWdqsse41simdintcomparMaximum of Packed Unsigned Word Integers
660F383FrC2++D44PMAXUDVdqWdqsse41simdintcomparMaximum of Packed Unsigned Dword Integers
660F3840rC2++D44PMULLDVdqWdqsse41simdintarithMultiply Packed Signed Dword Integers and Store Low Result
660F3841rC2++D44PHMINPOSUWVdqWdqsse41simdintcomparPacked Horizontal Word Minimum
660F3880rC2++D43P0INVEPTGdMdqvmxo..szapco..szapcInvalidate Translations Derived from EPT
660F3880rC2++D43E0INVEPTGqMdqvmxo..szapco..szapcInvalidate Translations Derived from EPT
660F3881rC2++D43P0INVVPIDGdMdqvmxo..szapco..szapcInvalidate Translations Based on VPID
660F3881rC2++D43E0INVVPIDGqMdqvmxo..szapco..szapcInvalidate Translations Based on VPID
0F38F0rC2++MOVBEGvqpMvqpgendatamovMove Data After Swapping Bytes
F20F38F0rC2++D44CRC32GdqpEbsse42Accumulate CRC32 Value
0F38F1rC2++MOVBEMvqpGvqpgendatamovMove Data After Swapping Bytes
F20F38F1rC2++D44CRC32GdqpEvqpsse42Accumulate CRC32 Value
660F3A08rC2++D44ROUNDPSVpsWpsIbsse41simdfpconverRound Packed Single-FP Values
660F3A09rC2++D44ROUNDPDVpsWpdIbsse41simdfpconverRound Packed Double-FP Values
660F3A0ArC2++D44ROUNDSSVssWssIbsse41simdfpconverRound Scalar Single-FP Values
660F3A0BrC2++D44ROUNDSDVsdWsdIbsse41simdfpconverRound Scalar Double-FP Values
660F3A0CrC2++D44BLENDPSVpsWpsIbsse41simdfpdatamovBlend Packed Single-FP Values
660F3A0DrC2++D44BLENDPDVpdWpdIbsse41simdfpdatamovBlend Packed Double-FP Values
660F3A0ErC2++D44PBLENDWVdqWdqIbsse41simdintdatamovBlend Packed Words
0F3A0FrC2+PALIGNRPqQqssse3simdintPacked Align Right
660F3A0FrC2+PALIGNRVdqWdqssse3simdintPacked Align Right
660F3A14rC2++D44PEXTRBMbVdqIbsse41simdintdatamovExtract Byte
660F3A15rC2++D44PEXTRWMwVdqIbsse41simdintdatamovExtract Word
660F3A16rC2++D44PEXTRDEdVdqIbsse41simdintdatamovExtract Dword/Qword
660F3A17rC2++D44EXTRACTPSEdVdqIbsse41simdfpdatamovExtract Packed Single-FP Value
660F3A20rC2++D44PINSRBVdqMbIbsse41simdintdatamovInsert Byte
660F3A21rC2++D44INSERTPSVpsMdIbsse41simdfpdatamovInsert Packed Single-FP Value
660F3A22rC2++D44PINSRDVdqEdIbsse41simdintdatamovInsert Dword/Qword
660F3A40rC2++D44DPPSVpsWpssse41simdfparithDot Product of Packed Single-FP Values
660F3A41rC2++D44DPPDVpdWpdsse41simdfparithDot Product of Packed Double-FP Values
660F3A42rC2++D44MPSADBWVdqWdqIbsse41simdintarithCompute Multiple Packed Sums of Absolute Difference
660F3A60rC2++D44PCMPESTRMXMM0VdqWdq...sse42strtxto..szapco..szapc.....ap.Packed Compare Explicit Length Strings, Return Mask
660F3A61rC2++D44PCMPESTRIrCXVdqWdq...sse42strtxto..szapco..szapc.....ap.Packed Compare Explicit Length Strings, Return Index
660F3A62rC2++D44PCMPISTRMXMM0VdqWdqIbsse42strtxto..szapco..szapc.....ap.Packed Compare Implicit Length Strings, Return Mask
660F3A63rC2++D44PCMPISTRIrCXVdqWdqIbsse42strtxto..szapco..szapc.....ap.Packed Compare Implicit Length Strings, Return Index
0F40tttnrPP+D33CMOVOGvqpEvqpgendatamovo.......Conditional Move - overflow (OF=1)
0F41tttNrPP+D33CMOVNOGvqpEvqpgendatamovo.......Conditional Move - not overflow (OF=0)
0F42ttTnrPP+D33CMOVBGvqpEvqpgendatamov.......cConditional Move - below/not above or equal/carry (CF=1)
0F43ttTNrPP+D33CMOVNBGvqpEvqpgendatamov.......cConditional Move - not below/above or equal/not carry (CF=0)
0F44tTtnrPP+D33CMOVZGvqpEvqpgendatamov....z...Conditional Move - zero/equal (ZF=1)
0F45tTtNrPP+D33CMOVNZGvqpEvqpgendatamov....z...Conditional Move - not zero/not equal (ZF=0)
0F46tTTnrPP+D33CMOVBEGvqpEvqpgendatamov....z..cConditional Move - below or equal/not above (CF=1 OR ZF=1)
0F47tTTNrPP+D33CMOVNBEGvqpEvqpgendatamov....z..cConditional Move - not below or equal/above (CF=0 AND ZF=0)
0F48TttnrPP+D33CMOVSGvqpEvqpgendatamov...s....Conditional Move - sign (SF=1)
0F49TttNrPP+D33CMOVNSGvqpEvqpgendatamov...s....Conditional Move - not sign (SF=0)
0F4ATtTnrPP+D33CMOVPGvqpEvqpgendatamov......p.Conditional Move - parity/parity even (PF=1)
0F4BTtTNrPP+D33CMOVNPGvqpEvqpgendatamov......p.Conditional Move - not parity/parity odd (PF=0)
0F4CTTtnrPP+D33CMOVLGvqpEvqpgendatamovo..s....Conditional Move - less/not greater (SF!=OF)
0F4DTTtNrPP+D33CMOVNLGvqpEvqpgendatamovo..s....Conditional Move - not less/greater or equal (SF=OF)
0F4ETTTnrPP+D33CMOVLEGvqpEvqpgendatamovo..sz...Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))
0F4FTTTNrPP+D33CMOVNLEGvqpEvqpgendatamovo..sz...Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))
0F50rP3+MOVMSKPSGdqpUpssse1simdfpdatamovExtract Packed Single-FP Sign Mask
660F50rP4+MOVMSKPDGdqpUpdsse2pcksclrdatamovExtract Packed Double-FP Sign Mask
0F51rP3+SQRTPSVpsWpssse1simdfparithCompute Square Roots of Packed Single-FP Values
F30F51rP3+SQRTSSVssWsssse1simdfparithCompute Square Root of Scalar Single-FP Value
660F51rP4+SQRTPDVpdWpdsse2pcksclrarithCompute Square Roots of Packed Double-FP Values
F20F51rP4+SQRTSDVsdWsdsse2pcksclrarithCompute Square Root of Scalar Double-FP Value
0F52rP3+RSQRTPSVpsWpssse1simdfparithCompute Recipr. of Square Roots of Packed Single-FP Values
F30F52rP3+RSQRTSSVssWsssse1simdfparithCompute Recipr. of Square Root of Scalar Single-FP Value
0F53rP3+RCPPSVpsWpssse1simdfparithCompute Reciprocals of Packed Single-FP Values
F30F53rP3+RCPSSVssWsssse1simdfparithCompute Reciprocal of Scalar Single-FP Values
0F54rP3+ANDPSVpsWpssse1simdfplogicalBitwise Logical AND of Packed Single-FP Values
660F54rP4+ANDPDVpdWpdsse2pcksclrlogicalBitwise Logical AND of Packed Double-FP Values
0F55rP3+ANDNPSVpsWpssse1simdfplogicalBitwise Logical AND NOT of Packed Single-FP Values
660F55rP4+ANDNPDVpdWpdsse2pcksclrlogicalBitwise Logical AND NOT of Packed Double-FP Values
0F56rP3+ORPSVpsWpssse1simdfplogicalBitwise Logical OR of Single-FP Values
660F56rP4+ORPDVpdWpdsse2pcksclrlogicalBitwise Logical OR of Double-FP Values
0F57rP3+XORPSVpsWpssse1simdfplogicalBitwise Logical XOR for Single-FP Values
660F57rP4+XORPDVpdWpdsse2pcksclrlogicalBitwise Logical XOR for Double-FP Values
0F58rP3+ADDPSVpsWpssse1simdfparithAdd Packed Single-FP Values
F30F58rP3+ADDSSVssWsssse1simdfparithAdd Scalar Single-FP Values
660F58rP4+ADDPDVpdWpdsse2pcksclrarithAdd Packed Double-FP Values
F20F58rP4+ADDSDVsdWsdsse2pcksclrarithAdd Scalar Double-FP Values
0F59rP3+MULPSVpsWpssse1simdfparithMultiply Packed Single-FP Values
F30F59rP3+MULSSVssWsssse1simdfparithMultiply Scalar Single-FP Value
660F59rP4+MULPDVpdWpdsse2pcksclrarithMultiply Packed Double-FP Values
F20F59rP4+MULSDVsdWsdsse2pcksclrarithMultiply Scalar Double-FP Values
0F5ArP4+CVTPS2PDVpdWpssse2pcksclrconverConvert Packed Single-FP Values to Double-FP Values
660F5ArP4+CVTPD2PSVpsWpdsse2pcksclrconverConvert Packed Double-FP Values to Single-FP Values
F30F5ArP4+CVTSS2SDVsdWsssse2pcksclrconverConvert Scalar Single-FP Value to Scalar Double-FP Value
F20F5ArP4+CVTSD2SSVssWsdsse2pcksclrconverConvert Scalar Double-FP Value to Scalar Single-FP Value
0F5BrP4+CVTDQ2PSVpsWdqsse2pckspConvert Packed DW Integers to Single-FP Values
660F5BrP4+CVTPS2DQVdqWpssse2pckspConvert Packed Single-FP Values to DW Integers
F30F5BrP4+CVTTPS2DQVdqWpssse2pckspConvert with Trunc. Packed Single-FP Values to DW Integers
0F5CrP3+SUBPSVpsWpssse1simdfparithSubtract Packed Single-FP Values
F30F5CrP3+SUBSSVssWsssse1simdfparithSubtract Scalar Single-FP Values
660F5CrP4+SUBPDVpdWpdsse2pcksclrarithSubtract Packed Double-FP Values
F20F5CrP4+SUBSDVsdWsdsse2pcksclrarithSubtract Scalar Double-FP Values
0F5DrP3+MINPSVpsWpssse1simdfparithReturn Minimum Packed Single-FP Values
F30F5DrP3+MINSSVssWsssse1simdfparithReturn Minimum Scalar Single-FP Value
660F5DrP4+MINPDVpdWpdsse2pcksclrarithReturn Minimum Packed Double-FP Values
F20F5DrP4+MINSDVsdWsdsse2pcksclrarithReturn Minimum Scalar Double-FP Value
0F5ErP3+DIVPSVpsWpssse1simdfparithDivide Packed Single-FP Values
F30F5ErP3+DIVSSVssWsssse1simdfparithDivide Scalar Single-FP Values
660F5ErP4+DIVPDVpdWpdsse2pcksclrarithDivide Packed Double-FP Values
F20F5ErP4+DIVSDVsdWsdsse2pcksclrarithDivide Scalar Double-FP Values
0F5FrP3+MAXPSVpsWpssse1simdfparithReturn Maximum Packed Single-FP Values
F30F5FrP3+MAXSSVssWsssse1simdfparithReturn Maximum Scalar Single-FP Value
660F5FrP4+MAXPDVpdWpdsse2pcksclrarithReturn Maximum Packed Double-FP Values
F20F5FrP4+MAXSDVsdWsdsse2pcksclrarithReturn Maximum Scalar Double-FP Value
0F60rPX+PUNPCKLBWPqQdmmxunpackUnpack Low Data
660F60rP4+PUNPCKLBWVdqWdqsse2simdintshunpckUnpack Low Data
0F61rPX+PUNPCKLWDPqQdmmxunpackUnpack Low Data
660F61rP4+PUNPCKLWDVdqWdqsse2simdintshunpckUnpack Low Data
0F62rPX+PUNPCKLDQPqQdmmxunpackUnpack Low Data
660F62rP4+PUNPCKLDQVdqWdqsse2simdintshunpckUnpack Low Data
0F63rPX+PACKSSWBPqQdmmxconverPack with Signed Saturation
660F63rP4+PACKSSWBVdqWdqsse2simdintconverPack with Signed Saturation
0F64rPX+PCMPGTBPqQdmmxcomparCompare Packed Signed Integers for Greater Than
660F64rP4+PCMPGTBVdqWdqsse2simdintcomparCompare Packed Signed Integers for Greater Than
0F65rPX+PCMPGTWPqQdmmxcomparCompare Packed Signed Integers for Greater Than
660F65rP4+PCMPGTWVdqWdqsse2simdintcomparCompare Packed Signed Integers for Greater Than
0F66rPX+PCMPGTDPqQdmmxcomparCompare Packed Signed Integers for Greater Than
660F66rP4+PCMPGTDVdqWdqsse2simdintcomparCompare Packed Signed Integers for Greater Than
0F67rPX+PACKUSWBPqQqmmxconverPack with Unsigned Saturation
660F67rP4+PACKUSWBVdqWdqsse2simdintconverPack with Unsigned Saturation
0F68rPX+PUNPCKHBWPqQqmmxunpackUnpack High Data
660F68rP4+PUNPCKHBWVdqWdqsse2simdintshunpckUnpack High Data
0F69rPX+PUNPCKHWDPqQqmmxunpackUnpack High Data
660F69rP4+PUNPCKHWDVdqWdqsse2simdintshunpckUnpack High Data
0F6ArPX+PUNPCKHDQPqQqmmxunpackUnpack High Data
660F6ArP4+PUNPCKHDQVdqWdqsse2simdintshunpckUnpack High Data
0F6BrPX+PACKSSDWPqQqmmxconverPack with Signed Saturation
660F6BrP4+PACKSSDWVdqWdqsse2simdintconverPack with Signed Saturation
660F6CrP4+PUNPCKLQDQVdqWdqsse2simdintshunpckUnpack Low Data
660F6DrP4+PUNPCKHQDQVdqWdqsse2simdintshunpckUnpack High Data
0F6ErPX+MOVDPqEdmmxdatamovMove Doubleword
0F6ErP4+D32EMOVDPqEdmmxdatamovMove Doubleword/Quadword
660F6ErP4+MOVDVdqEdsse2simdintdatamovMove Doubleword
660F6ErP4+D32EMOVDVdqEdsse2simdintdatamovMove Doubleword/Quadword
0F6FrPX+MOVQPqQqmmxdatamovMove Quadword
660F6FrP4+MOVDQAVdqWdqsse2simdintdatamovMove Aligned Double Quadword
F30F6FrP4+MOVDQUVdqWdqsse2simdintdatamovMove Unaligned Double Quadword
0F70rP3+PSHUFWPqQqIbsse1simdintShuffle Packed Words
F20F70rP4+PSHUFLWVdqWdqIbsse2simdintshunpckShuffle Packed Low Words
F30F70rP4+PSHUFHWVdqWdqIbsse2simdintshunpckShuffle Packed High Words
660F70rP4+PSHUFDVdqWdqIbsse2simdintshunpckShuffle Packed Doublewords
0F712PX+PSRLWNqIbmmxshiftShift Packed Data Right Logical
660F712P4+PSRLWUdqIbsse2shiftShift Packed Data Right Logical
0F714PX+PSRAWNqIbmmxshiftShift Packed Data Right Arithmetic
660F714P4+PSRAWUdqIbsse2shiftShift Packed Data Right Arithmetic
0F716PX+PSLLWNqIbmmxshiftShift Packed Data Left Logical
660F716P4+PSLLWUdqIbsse2shiftShift Packed Data Left Logical
0F722PX+PSRLDNqIbmmxshiftShift Double Quadword Right Logical
660F722P4+PSRLDUdqIbsse2shiftShift Double Quadword Right Logical
0F724PX+PSRADNqIbmmxshiftShift Packed Data Right Arithmetic
660F724P4+PSRADUdqIbsse2shiftShift Packed Data Right Arithmetic
0F726PX+PSLLDNqIbmmxshiftShift Packed Data Left Logical
660F726P4+PSLLDUdqIbsse2shiftShift Packed Data Left Logical
0F732PX+PSRLQNqIbmmxshiftShift Packed Data Right Logical
660F732P4+PSRLQUdqIbsse2shiftShift Packed Data Right Logical
660F733P4+PSRLDQUdqIbsse2simdintshiftShift Double Quadword Right Logical
0F736PX+PSLLQNqIbmmxshiftShift Packed Data Left Logical
660F736P4+PSLLQUdqIbsse2shiftShift Packed Data Left Logical
660F737P4+PSLLDQUdqIbsse2simdintshiftShift Double Quadword Left Logical
0F74rPX+PCMPEQBPqQqmmxcomparCompare Packed Data for Equal
660F74rP4+PCMPEQBVdqWdqsse2simdintcomparCompare Packed Data for Equal
0F75rPX+PCMPEQWPqQqmmxcomparCompare Packed Data for Equal
660F75rP4+PCMPEQWVdqWdqsse2simdintcomparCompare Packed Data for Equal
0F76rPX+PCMPEQDPqQqmmxcomparCompare Packed Data for Equal
660F76rP4+PCMPEQDVdqWdqsse2simdintcomparCompare Packed Data for Equal
0F77PX+EMMSmmxx87fpucontrolEmpty MMX Technology State
0F78rP4++D43P0VMREADEdGdvmxo..szapco..szapcRead Field from Virtual-Machine Control Structure
0F78rP4++D43E0VMREADEqGqvmxo..szapco..szapcRead Field from Virtual-Machine Control Structure
0F79rP4++D43P0VMWRITEGdEdvmxo..szapco..szapcWrite Field to Virtual-Machine Control Structure
0F79rP4++D43E0VMWRITEGqEqvmxo..szapco..szapcWrite Field to Virtual-Machine Control Structure
660F7CrP4++HADDPDVpdWpdsse3simdfparithPacked Double-FP Horizontal Add
F20F7CrP4++HADDPSVpsWpssse3simdfparithPacked Single-FP Horizontal Add
660F7DrP4++HSUBPDVpdWpdsse3simdfparithPacked Double-FP Horizontal Subtract
F20F7DrP4++HSUBPSVpsWpssse3simdfparithPacked Single-FP Horizontal Subtract
0F7ErPX+MOVDEdPqmmxdatamovMove Doubleword
0F7ErP4+D32EMOVDEdPqmmxdatamovMove Doubleword/Quadword
660F7ErP4+MOVDEdVdqsse2simdintdatamovMove Doubleword
660F7ErP4+D32EMOVDEdVdqsse2simdintdatamovMove Doubleword/Quadword
F30F7ErP4+MOVQVqWqsse2simdintdatamovMove Quadword
0F7FrPX+MOVQQqPqmmxdatamovMove Quadword
660F7FrP4+MOVDQAWdqVdqsse2simdintdatamovMove Aligned Double Quadword
F30F7FrP4+MOVDQUWdqVdqsse2simdintdatamovMove Unaligned Double Quadword
0F80tttn03+D42JOJvdsgenbranchcondo.......Jump near if overflow (OF=1)
0F81tttN03+D42JNOJvdsgenbranchcondo.......Jump near if not overflow (OF=0)
0F82ttTn03+D42JBJvdsgenbranchcond.......cJump near if below/not above or equal/carry (CF=1)
0F83ttTN03+D42JNBJvdsgenbranchcond.......cJump near if not below/above or equal/not carry (CF=0)
0F84tTtn03+D42JZJvdsgenbranchcond....z...Jump near if zero/equal (ZF=1)
0F85tTtN03+D42JNZJvdsgenbranchcond....z...Jump near if not zero/not equal (ZF=0)
0F86tTTn03+D42JBEJvdsgenbranchcond....z..cJump near if below or equal/not above (CF=1 OR ZF=1)
0F87tTTN03+D42JNBEJvdsgenbranchcond....z..cJump near if not below or equal/above (CF=0 AND ZF=0)
0F88Tttn03+D42JSJvdsgenbranchcond...s....Jump near if sign (SF=1)
0F89TttN03+D42JNSJvdsgenbranchcond...s....Jump near if not sign (SF=0)
0F8ATtTn03+D42JPJvdsgenbranchcond......p.Jump near if parity/parity even (PF=1)
0F8BTtTN03+D42JNPJvdsgenbranchcond......p.Jump near if not parity/parity odd (PF=0)
0F8CTTtn03+D42JLJvdsgenbranchcondo..s....Jump near if less/not greater (SF!=OF)
0F8DTTtN03+D42JNLJvdsgenbranchcondo..s....Jump near if not less/greater or equal (SF=OF)
0F8ETTTn03+D42JLEJvdsgenbranchcondo..sz...Jump near if less or equal/not greater ((ZF=1) OR (SF!=OF))
0F8FTTTN03+D42JNLEJvdsgenbranchcondo..sz...Jump near if not less nor equal/greater ((ZF=0) AND (SF=OF))
0F90tttn003+D34SETOEbgendatamovo.......Set Byte on Condition - overflow (OF=1)
0F91tttN003+D34SETNOEbgendatamovo.......Set Byte on Condition - not overflow (OF=0)
0F92ttTn003+D34SETBEbgendatamov.......cSet Byte on Condition - below/not above or equal/carry (CF=1)
0F93ttTN003+D34SETNBEbgendatamov.......cSet Byte on Condition - not below/above or equal/not carry (CF=0)
0F94tTtn003+D34SETZEbgendatamov....z...Set Byte on Condition - zero/equal (ZF=1)
0F95tTtN003+D34SETNZEbgendatamov....z...Set Byte on Condition - not zero/not equal (ZF=0)
0F96tTTn003+D34SETBEEbgendatamov....z..cSet Byte on Condition - below or equal/not above (CF=1 OR ZF=1)
0F97tTTN003+D34SETNBEEbgendatamov....z..cSet Byte on Condition - not below or equal/above (CF=0 AND ZF=0)
0F98Tttn003+D34SETSEbgendatamov...s....Set Byte on Condition - sign (SF=1)
0F99TttN003+D34SETNSEbgendatamov...s....Set Byte on Condition - not sign (SF=0)
0F9ATtTn003+D34SETPEbgendatamov......p.Set Byte on Condition - parity/parity even (PF=1)
0F9BTtTN003+D34SETNPEbgendatamov......p.Set Byte on Condition - not parity/parity odd (PF=0)
0F9CTTtn003+D34SETLEbgendatamovo..s....Set Byte on Condition - less/not greater (SF!=OF)
0F9DTTtN003+D34SETNLEbgendatamovo..s....Set Byte on Condition - not less/greater or equal (SF=OF)
0F9ETTTn003+D34SETLEEbgendatamovo..sz...Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))
0F9FTTTN003+D34SETNLEEbgendatamovo..sz...Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))
0FA0Sre03+PUSHFSgenstack segregPush Word, Doubleword or Quadword Onto the Stack
0FA1Sre03+POPFSgenstack segregPop a Value from the Stack
0FA204++CPUIDI...EAXECX...gencontrolCPU Identification
0FA3r03+BTEvqpGvqpgenbito..szapc.......co..szap.Bit Test
0FA4dr03+SHLDEvqpGvqpIbgenshftroto..szapco..sz.pco....a.cDouble Precision Shift Left
0FA5dr03+SHLDEvqpGvqpCLgenshftroto..szapco..sz.pco....a.cDouble Precision Shift Left
0FA8SrE03+PUSHGSgenstack segregPush Word, Doubleword or Quadword Onto the Stack
0FA9SrE03+POPGSgenstack segregPop a Value from the Stack
0FAA03++SRSMFwsystembranchResume from System Management Mode
0FABr03+LBTSEvqpGvqpgenbito..szapc.......co..szap.Bit Test and Set
0FACdr03+SHRDEvqpGvqpIbgenshftroto..szapco..sz.pco....a.cDouble Precision Shift Right
0FADdr03+SHRDEvqpGvqpCLgenshftroto..szapco..sz.pco....a.cDouble Precision Shift Right
0FAE0P2++FXSAVEMstxSTST1...smSave x87 FPU, MMX, XMM, and MXCSR State
0FAE0P4+EFXSAVEMstxSTST1...smSave x87 FPU, MMX, XMM, and MXCSR State
0FAE1P2++FXRSTORSTST1ST2...smRestore x87 FPU, MMX, XMM, and MXCSR State
0FAE1P4+EFXRSTORSTST1ST2...smRestore x87 FPU, MMX, XMM, and MXCSR State
0FAE2P3+LDMXCSRMdsse1mxcsrsmLoad MXCSR Register
0FAE3P3+STMXCSRMdsse1mxcsrsmStore MXCSR Register State
0FAE4C2++XSAVEMEDXEAX...systemSave Processor Extended States
0FAE4C2++EXSAVEMEDXEAX...systemSave Processor Extended States
0FAE5P4+LFENCEsse2orderLoad Fence
0FAE5C2++XRSTORSTST1ST2...systemRestore Processor Extended States
0FAE5C2++EXRSTORSTST1ST2...systemRestore Processor Extended States
0FAE6P4+MFENCEsse2orderMemory Fence
0FAE7P3+SFENCEsse1orderStore Fence
0FAE7P4+CLFLUSHMbsse2cachectFlush Cache Line
0FAFDWr03+IMULGvqpEvqpgenarithbinaryo..szapco......c...szap.Signed Multiply
0FB0dwr04+D35LCMPXCHGEbALGbgendatamov arithbinaryo..szapco..szapcCompare and Exchange
0FB1dWr04+D35LCMPXCHGEvqprAXGvqpgendatamov arithbinaryo..szapco..szapcCompare and Exchange
0FB2sRer03+D36LSSSSGvqpMptpgendatamov segregLoad Far Pointer
0FB3r03+LBTREvqpGvqpgenbito..szapc.......co..szap.Bit Test and Reset
0FB4Srer03+D36LFSFSGvqpMptpgendatamov segregLoad Far Pointer
0FB5SrEr03+D36LGSGSGvqpMptpgendatamov segregLoad Far Pointer
0FB6Dwr03+MOVZXGvqpEbgenconverMove with Zero-Extend
0FB7DWr03+MOVZXGvqpEwgenconverMove with Zero-Extend
0FB8IT+JMPEsystembranchJump to IA-64 Instruction Set
F30FB8rC2++POPCNTGvqpEvqpgenbito..szapco..s.apcBit Population Count
0FB9r02+M37UDGEgencontrolUndefined Instruction
0FBA403+BTEvqpIbgenbito..szapc.......co..szap.Bit Test
0FBA503+LBTSEvqpIbgenbito..szapc.......co..szap.Bit Test and Set
0FBA603+LBTREvqpIbgenbito..szapc.......co..szap.Bit Test and Reset
0FBA703+LBTCEvqpIbgenbito..szapc.......co..szap.Bit Test and Complement
0FBBr03+LBTCEvqpGvqpgenbito..szapc.......co..szap.Bit Test and Complement
0FBCr03+D38BSFGvqpEvqpgenbito..szapc....z...o..s.apcBit Scan Forward
0FBDr03+D38BSRGvqpEvqpgenbito..szapc....z...o..s.apcBit Scan Reverse
0FBEDwr03+MOVSXGvqpEbgenconverMove with Sign-Extension
0FBFDWr03+MOVSXGvqpEwgenconverMove with Sign-Extension
0FC0dwr04+LXADDEbGbgendatamov arithbinaryo..szapco..szapcExchange and Add
0FC1dWr04+LXADDEvqpGvqpgendatamov arithbinaryo..szapco..szapcExchange and Add
0FC2rP3+CMPPSVpsWpsIbsse1simdfpcomparCompare Packed Single-FP Values
F30FC2rP3+CMPSSVssWssIbsse1simdfpcomparCompare Scalar Single-FP Values
660FC2rP4+CMPPDVpdWpdIbsse2pcksclrcomparCompare Packed Double-FP Values
F20FC2rP4+CMPSDVsdWsdIbsse2pcksclrcomparCompare Scalar Double-FP Values
0FC3rP4+MOVNTIMdqpGdqpsse2cachectStore Doubleword Using Non-Temporal Hint
0FC4rP3+PINSRWPqRdqpIbsse1simdintInsert Word
660FC4rP3+PINSRWVdqRdqpIbsse1simdintInsert Word
0FC5rP3+PEXTRWGdqpNqIbsse1simdintExtract Word
660FC5rP3+PEXTRWGdqpUdqIbsse1simdintExtract Word
0FC6rP3+SHUFPSVpsWpsIbsse1simdfpshunpckShuffle Packed Single-FP Values
660FC6rP4+SHUFPDVpdWpdIbsse2pcksclrshunpckShuffle Packed Double-FP Values
0FC71P1+D39LCMPXCHG8BMqEAXEDX...gendatamov arithbinary....z.......z...Compare and Exchange Bytes
0FC71P4+D39ELCMPXCHG8BMqEAXEDX...gendatamov arithbinary....z.......z...Compare and Exchange Bytes
0FC76P4++D43P0VMPTRLDMqvmxo..szapco..szapcLoad Pointer to Virtual-Machine Control Structure
660FC76P4++D43P0VMCLEARMqvmxo..szapco..szapcClear Virtual-Machine Control Structure
F30FC76P4++D43P0VMXONMqvmxo..szapco..szapcEnter VMX Operation
0FC77P4++D43P0VMPTRSTMqvmxo..szapco..szapcStore Pointer to Virtual-Machine Control Structure
0FC8+r04+D40BSWAPZvqpgendatamovByte Swap
660FD0rP4++ADDSUBPDVpdWpdsse3simdfparithPacked Double-FP Add/Subtract
F20FD0rP4++ADDSUBPSVpsWpssse3simdfparithPacked Single-FP Add/Subtract
0FD1rPX+PSRLWPqQqmmxshiftShift Packed Data Right Logical
660FD1rP4+PSRLWVdqWdqsse2simdintshiftShift Packed Data Right Logical
0FD2rPX+PSRLDPqQqmmxshiftShift Packed Data Right Logical
660FD2rP4+PSRLDVdqWdqsse2simdintshiftShift Packed Data Right Logical
0FD3rPX+PSRLQPqQqmmxshiftShift Packed Data Right Logical
660FD3rP4+PSRLQVdqWdqsse2simdintshiftShift Packed Data Right Logical
0FD4rPX+PADDQPqQqsse2simdintarithAdd Packed Quadword Integers
660FD4rP4+PADDQVdqWdqsse2simdintarithAdd Packed Quadword Integers
0FD5rPX+PMULLWPqQqmmxarithMultiply Packed Signed Integers and Store Low Result
660FD5rP4+PMULLWVdqWdqsse2simdintarithMultiply Packed Signed Integers and Store Low Result
660FD6rP4+MOVQWqVqsse2simdintdatamovMove Quadword
F30FD6rP4+MOVQ2DQVdqNqsse2simdintdatamovMove Quadword from MMX Technology to XMM Register
F20FD6rP4+MOVDQ2QPqUqsse2simdintdatamovMove Quadword from XMM to MMX Technology Register
0FD7rP3+PMOVMSKBGdqpNqsse1simdintMove Byte Mask
660FD7rP3+PMOVMSKBGdqpUdqsse1simdintMove Byte Mask
0FD8rPX+PSUBUSBPqQqmmxarithSubtract Packed Unsigned Integers with Unsigned Saturation
660FD8rP4+PSUBUSBVdqWdqsse2simdintarithSubtract Packed Unsigned Integers with Unsigned Saturation
0FD9rPX+PSUBUSWPqQqmmxarithSubtract Packed Unsigned Integers with Unsigned Saturation
660FD9rPX+PSUBUSWVdqWdqsse2simdintarithSubtract Packed Unsigned Integers with Unsigned Saturation
0FDArP3+PMINUBPqQqsse1simdintMinimum of Packed Unsigned Byte Integers
660FDArP3+PMINUBVdqWdqsse1simdintMinimum of Packed Unsigned Byte Integers
0FDBrPX+PANDPqQdmmxlogicalLogical AND
660FDBrP4+PANDVdqWdqsse2simdintlogicalLogical AND
0FDCrPX+PADDUSBPqQqmmxarithAdd Packed Unsigned Integers with Unsigned Saturation
660FDCrP4+PADDUSBVdqWdqsse2simdintarithAdd Packed Unsigned Integers with Unsigned Saturation
0FDDrPX+PADDUSWPqQqmmxarithAdd Packed Unsigned Integers with Unsigned Saturation
660FDDrP4+PADDUSWVdqWdqsse2simdintarithAdd Packed Unsigned Integers with Unsigned Saturation
0FDErP3+PMAXUBPqQqsse1simdintMaximum of Packed Unsigned Byte Integers
660FDErP3+PMAXUBVdqWdqsse1simdintMaximum of Packed Unsigned Byte Integers
0FDFrPX+PANDNPqQqmmxlogicalLogical AND NOT
660FDFrP4+PANDNVdqWdqsse2simdintlogicalLogical AND NOT
0FE0rP3+PAVGBPqQqsse1simdintAverage Packed Integers
660FE0rP3+PAVGBVdqWdqsse1simdintAverage Packed Integers
0FE1rPX+PSRAWPqQqmmxshiftShift Packed Data Right Arithmetic
660FE1rP4+PSRAWVdqWdqsse2simdintshiftShift Packed Data Right Arithmetic
0FE2rPX+PSRADPqQqmmxshiftShift Packed Data Right Arithmetic
660FE2rP4+PSRADVdqWdqsse2simdintshiftShift Packed Data Right Arithmetic
0FE3rP3+PAVGWPqQqsse1simdintAverage Packed Integers
660FE3rP3+PAVGWVdqWdqsse1simdintAverage Packed Integers
0FE4rP3+PMULHUWPqQqsse1simdintMultiply Packed Unsigned Integers and Store High Result
660FE4rP3+PMULHUWVdqWdqsse1simdintMultiply Packed Unsigned Integers and Store High Result
0FE5rPX+PMULHWPqQqmmxarithMultiply Packed Signed Integers and Store High Result
660FE5rP4+PMULHWVdqWdqsse2simdintarithMultiply Packed Signed Integers and Store High Result
F20FE6rP4+CVTPD2DQVdqWpdsse2pcksclrconverConvert Packed Double-FP Values to DW Integers
660FE6rP4+CVTTPD2DQVdqWpdsse2pcksclrconverConvert with Trunc. Packed Double-FP Values to DW Integers
F30FE6rP4+CVTDQ2PDVpdWdqsse2pcksclrconverConvert Packed DW Integers to Double-FP Values
0FE7rP3+MOVNTQMqPqsse1cachectStore of Quadword Using Non-Temporal Hint
660FE7rP4+MOVNTDQMdqVdqsse2cachectStore Double Quadword Using Non-Temporal Hint
0FE8rPX+PSUBSBPqQqmmxarithSubtract Packed Signed Integers with Signed Saturation
660FE8rP4+PSUBSBVdqWdqsse2simdintarithSubtract Packed Signed Integers with Signed Saturation
0FE9rPX+PSUBSWPqQqmmxarithSubtract Packed Signed Integers with Signed Saturation
660FE9rP4+PSUBSWVdqWdqsse2simdintarithSubtract Packed Signed Integers with Signed Saturation
0FEArP3+PMINSWPqQqsse1simdintMinimum of Packed Signed Word Integers
660FEArP3+PMINSWVdqWdqsse1simdintMinimum of Packed Signed Word Integers
0FEBrPX+PORPqQqmmxlogicalBitwise Logical OR
660FEBrP4+PORVdqWdqsse2simdintlogicalBitwise Logical OR
0FECrPX+PADDSBPqQqmmxarithAdd Packed Signed Integers with Signed Saturation
660FECrP4+PADDSBVdqWdqsse2simdintarithAdd Packed Signed Integers with Signed Saturation
0FEDrPX+PADDSWPqQqmmxarithAdd Packed Signed Integers with Signed Saturation
660FEDrP4+PADDSWVdqWdqsse2simdintarithAdd Packed Signed Integers with Signed Saturation
0FEErP3+PMAXSWPqQqsse1simdintMaximum of Packed Signed Word Integers
660FEErP3+PMAXSWVdqWdqsse1simdintMaximum of Packed Signed Word Integers
0FEFrPX+PXORPqQqmmxlogicalLogical Exclusive OR
660FEFrP4+PXORVdqWdqsse2simdintlogicalLogical Exclusive OR
F20FF0rP4++LDDQUVdqMdqsse3cachectLoad Unaligned Integer 128 Bits
0FF1rPX+PSLLWPqQqmmxshiftShift Packed Data Left Logical
660FF1rP4+PSLLWVdqWdqsse2simdintshiftShift Packed Data Left Logical
0FF2rPX+PSLLDPqQqmmxshiftShift Packed Data Left Logical
660FF2rP4+PSLLDVdqWdqsse2simdintshiftShift Packed Data Left Logical
0FF3rPX+PSLLQPqQqmmxshiftShift Packed Data Left Logical
660FF3rP4+PSLLQVdqWdqsse2simdintshiftShift Packed Data Left Logical
0FF4rP4+PMULUDQPqQqsse2simdintarithMultiply Packed Unsigned DW Integers
660FF4rP4+PMULUDQVdqWdqsse2simdintarithMultiply Packed Unsigned DW Integers
0FF5rPX+PMADDWDPqQdmmxarithMultiply and Add Packed Integers
660FF5rP4+PMADDWDVdqWdqsse2simdintarithMultiply and Add Packed Integers
0FF6rP3+PSADBWPqQqsse1simdintCompute Sum of Absolute Differences
660FF6rP3+PSADBWVdqWdqsse1simdintCompute Sum of Absolute Differences
0FF7rP3+D41MASKMOVQBDqPqNqsse1cachectStore Selected Bytes of Quadword
660FF7rP4+MASKMOVDQUBDdqVdqUdqsse2cachectStore Selected Bytes of Double Quadword
0FF8rPX+PSUBBPqQqmmxarithSubtract Packed Integers
660FF8rP4+PSUBBVdqWdqsse2simdintarithSubtract Packed Integers
0FF9rPX+PSUBWPqQqmmxarithSubtract Packed Integers
660FF9rP4+PSUBWVdqWdqsse2simdintarithSubtract Packed Integers
0FFArPX+PSUBDPqQqmmxarithSubtract Packed Integers
660FFArP4+PSUBDVdqWdqsse2simdintarithSubtract Packed Integers
0FFBrP4+PSUBQPqQqsse2simdintarithSubtract Packed Quadword Integers
660FFBrP4+PSUBQVdqWdqsse2simdintarithSubtract Packed Quadword Integers
0FFCrPX+PADDBPqQqmmxarithAdd Packed Integers
660FFCrP4+PADDBVdqWdqsse2simdintarithAdd Packed Integers
0FFDrPX+PADDWPqQqmmxarithAdd Packed Integers
660FFDrP4+PADDWVdqWdqsse2simdintarithAdd Packed Integers
0FFErPX+PADDDPqQqmmxarithAdd Packed Integers
660FFErP4+PADDDVdqWdqsse2simdintarithAdd Packed Integers
